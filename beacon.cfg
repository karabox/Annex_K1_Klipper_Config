[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_DE5210404E4B333448202020FF0A2718-if00
x_offset: 15.4 
y_offset: 15.4 
mesh_main_direction: x
mesh_runs: 2

[safe_z_home]
home_xy_position: 160, 160 # update for your machine
z_hop: 5

[quad_gantry_level]
speed:400
gantry_corners:
   -55,-59
   475,481
#  Probe points
points:
   50,50
   50,300
   300,300
   300,50
      
speed: 500
horizontal_move_z: 5
retries: 10
retry_tolerance: 0.007
max_adjust: 3

[bed_mesh]
speed: 500
horizontal_move_z: 5
mesh_min: 40, 40
mesh_max: 310,310
probe_count: 15,15
mesh_pps: 2,2
algorithm: bicubic
#relative_reference_index: 5101

#   Path to the serial port for the beacon device. Typically has the form
#   /dev/serial/by-id/usb-Beacon_Beacon_...
#speed: 5.
#   Z probing dive speed.
#lift_speed: 5.
#   Z probing lift speed.
#backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
#x_offset: 0.
#   X offset of beacon from the nozzle.
#y_offset: 0.
#   Y offset of beacon from the nozzle.
#trigger_distance: 2.
#   Beacon trigger distance for homing.
#trigger_dive_threshold: 1.
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
#trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
#cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
#cal_floor: 0.2
#   Minimum z bound on sensor response measurement.
#cal_ceil: 5.
#   Maximum z bound on sensor response measurement.
#cal_speed: 1.
#   Speed while measuring response curve.
#cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
#default_model_name: default
#   Name of default beacon model to load.
#mesh_main_direction: y
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
#mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
#mesh_runs: 1
#   Number of passes to make during mesh scan.